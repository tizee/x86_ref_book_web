(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{542:function(t,e,s){"use strict";s.r(e);var a=s(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"movddup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#movddup"}},[t._v("#")]),t._v(" MOVDDUP")]),t._v(" "),s("h2",{attrs:{id:"move-one-double-fp-and-duplicate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#move-one-double-fp-and-duplicate"}},[t._v("#")]),t._v(" Move One Double-FP and Duplicate")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Opcode")]),t._v(" "),s("th",[t._v("Mnemonic")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("F2 0F 12 /r")]),t._v(" "),s("td",[t._v("MOVDDUP xmm1, xmm2/m64")]),t._v(" "),s("td",[t._v("Move 64 bits representing the lower DP data element from xmm2/m64 to xmm1 register and duplicate.")])])])]),t._v(" "),s("h2",{attrs:{id:"description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[t._v("The linear address corresponds to the address of the least-significant byte of the referenced memory data. When a memory address is indicated, the 8 bytes of data at memory location m64 are loaded. When the register-register form of this operation is used, the lower half of the 128- bit source register is duplicated and copied into the 128-bit destination register.")]),t._v(" "),s("h2",{attrs:{id:"operation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operation"}},[t._v("#")]),t._v(" Operation")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" m64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Load instruction")]),t._v("\n\txmm1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\txmm1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".127")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Move instruction")]),t._v("\n\txmm1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xmm2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\txmm1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".127")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xmm2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".63")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[t._v("#")]),t._v(" Exceptions")]),t._v(" "),s("p",[t._v("None.")]),t._v(" "),s("h2",{attrs:{id:"numeric-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#numeric-exceptions"}},[t._v("#")]),t._v(" Numeric Exceptions")]),t._v(" "),s("p",[t._v("None.")]),t._v(" "),s("h2",{attrs:{id:"protected-mode-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#protected-mode-exceptions"}},[t._v("#")]),t._v(" Protected Mode Exceptions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("a",{attrs:{href:""}})]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("For an illegal memory operand effective address in the CS, DS, ES, FS or GS segments.")])]),t._v(" "),s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("For an illegal memory operand effective address in the CS, DS, ES, FS or GS segments.")])]),t._v(" "),s("tr",[s("td",[t._v("#SS(0)")]),t._v(" "),s("td",[t._v("For an illegal address in the SS segment.")])]),t._v(" "),s("tr",[s("td",[t._v("#PF(fault-code)")]),t._v(" "),s("td",[t._v("For a page fault.")])]),t._v(" "),s("tr",[s("td",[t._v("#NM")]),t._v(" "),s("td",[t._v("If TS bit in CR0 is set.")])]),t._v(" "),s("tr",[s("td",[t._v("#UD")]),t._v(" "),s("td",[t._v("If CR0.EM = 1. If CR4.OSFXSR(bit 9) = 0. If CPUID.SSE3(ECX bit 0) = 0.")])])])]),t._v(" "),s("h2",{attrs:{id:"real-address-mode-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#real-address-mode-exceptions"}},[t._v("#")]),t._v(" Real-Address Mode Exceptions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("a",{attrs:{href:""}})]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("If any part of the operand would lie outside of the effective address space from 0 to 0FFFFH.")])]),t._v(" "),s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("If any part of the operand would lie outside of the effective address space from 0 to 0FFFFH.")])]),t._v(" "),s("tr",[s("td",[t._v("#NM")]),t._v(" "),s("td",[t._v("If TS bit in CR0 is set.")])])])]),t._v(" "),s("h2",{attrs:{id:"virtual-8086-mode-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#virtual-8086-mode-exceptions"}},[t._v("#")]),t._v(" Virtual-8086 Mode Exceptions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("a",{attrs:{href:""}})]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("If any part of the operand would lie outside of the effective address space from 0 to 0FFFFH.")])]),t._v(" "),s("tr",[s("td",[t._v("#GP(0)")]),t._v(" "),s("td",[t._v("If any part of the operand would lie outside of the effective address space from 0 to 0FFFFH.")])]),t._v(" "),s("tr",[s("td",[t._v("#NM")]),t._v(" "),s("td",[t._v("If TS bit in CR0 is set.")])]),t._v(" "),s("tr",[s("td",[t._v("#UD")]),t._v(" "),s("td",[t._v("If CR0.EM = 1. If CR4.OSFXSR(bit 9) = 0. If CPUID.SSE3(ECX bit 0) = 0.")])]),t._v(" "),s("tr",[s("td",[t._v("#PF(fault-code)")]),t._v(" "),s("td",[t._v("For a page fault.")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Instruction")]),t._v(" "),s("th",[t._v("Latency")]),t._v(" "),s("th",[t._v("Throughput")]),t._v(" "),s("th",[t._v("Execution Unit")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CPUID")]),t._v(" "),s("td",[t._v("0F3n")]),t._v(" "),s("td",[t._v("0F3n")]),t._v(" "),s("td",[t._v("0F3n")])]),t._v(" "),s("tr",[s("td",[t._v("MOVDDUP xmm1, xmm2")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("FP_MOVE")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);