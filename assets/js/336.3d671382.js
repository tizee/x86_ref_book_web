(window.webpackJsonp=window.webpackJsonp||[]).push([[336],{690:function(t,r,e){"use strict";e.r(r);var v=e(42),_=Object(v.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"xor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xor"}},[t._v("#")]),t._v(" XOR")]),t._v(" "),e("h2",{attrs:{id:"logical-exclusive-or"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logical-exclusive-or"}},[t._v("#")]),t._v(" Logical Exclusive OR")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Opcode")]),t._v(" "),e("th",[t._v("Mnemonic")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("34 ib")]),t._v(" "),e("td",[t._v("XOR AL,imm8")]),t._v(" "),e("td",[t._v("AL XOR imm8.")])]),t._v(" "),e("tr",[e("td",[t._v("35 iw")]),t._v(" "),e("td",[t._v("XOR AX,imm16")]),t._v(" "),e("td",[t._v("AX XOR imm16.")])]),t._v(" "),e("tr",[e("td",[t._v("35 id")]),t._v(" "),e("td",[t._v("XOR EAX,imm32")]),t._v(" "),e("td",[t._v("EAX XOR imm32.")])]),t._v(" "),e("tr",[e("td",[t._v("80 /6 ib")]),t._v(" "),e("td",[t._v("XOR r/m8,imm8 r/m8")]),t._v(" "),e("td",[t._v("XOR imm8.")])]),t._v(" "),e("tr",[e("td",[t._v("81 /6 iw")]),t._v(" "),e("td",[t._v("XOR r/m16,imm16")]),t._v(" "),e("td",[t._v("r/m16 XOR imm16.")])]),t._v(" "),e("tr",[e("td",[t._v("81 /6 id")]),t._v(" "),e("td",[t._v("XOR r/m32,imm32")]),t._v(" "),e("td",[t._v("r/m32 XOR imm32.")])]),t._v(" "),e("tr",[e("td",[t._v("83 /6 ib")]),t._v(" "),e("td",[t._v("XOR r/m16,imm8")]),t._v(" "),e("td",[t._v("r/m16 XOR imm8 (sign-extended).")])]),t._v(" "),e("tr",[e("td",[t._v("83 /6 ib")]),t._v(" "),e("td",[t._v("XOR r/m32,imm8")]),t._v(" "),e("td",[t._v("r/m32 XOR imm8 (sign-extended).")])]),t._v(" "),e("tr",[e("td",[t._v("30 /r")]),t._v(" "),e("td",[t._v("XOR r/m8,r8")]),t._v(" "),e("td",[t._v("r/m8 XOR r8.")])]),t._v(" "),e("tr",[e("td",[t._v("31 /r")]),t._v(" "),e("td",[t._v("XOR r/m16,r16")]),t._v(" "),e("td",[t._v("r/m16 XOR r16.")])]),t._v(" "),e("tr",[e("td",[t._v("31 /r")]),t._v(" "),e("td",[t._v("XOR r/m32,r32")]),t._v(" "),e("td",[t._v("r/m32 XOR r32.")])]),t._v(" "),e("tr",[e("td",[t._v("32 /r")]),t._v(" "),e("td",[t._v("XOR r8,r/m8")]),t._v(" "),e("td",[t._v("r8 XOR r/m8.")])]),t._v(" "),e("tr",[e("td",[t._v("33 /r")]),t._v(" "),e("td",[t._v("XOR r16,r/m16")]),t._v(" "),e("td",[t._v("r16 XOR r/m16.")])]),t._v(" "),e("tr",[e("td",[t._v("33 /r")]),t._v(" "),e("td",[t._v("XOR r32,r/m32")]),t._v(" "),e("td",[t._v("r32 XOR r/m32.")])])])]),t._v(" "),e("h2",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),e("p",[t._v("Performs a bitwise exclusive OR (XOR) operation on the destination (first) and source (second) operands and stores the result in the destination operand location. The source operand can be an immediate, a register, or a memory location; the destination operand can be a register or a memory location. (However, two memory operands cannot be used in one instruction.) Each bit of the result is 1 if the corresponding bits of the operands are different; each bit is 0 if the corresponding bits are the same.")]),t._v(" "),e("p",[t._v("This instruction can be used with a LOCK prefix to allow the instruction to be executed atomically.")]),t._v(" "),e("h2",{attrs:{id:"operation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operation"}},[t._v("#")]),t._v(" Operation")]),t._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("Destination "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Destination "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" Source"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"flags-affected"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flags-affected"}},[t._v("#")]),t._v(" Flags affected")]),t._v(" "),e("p",[t._v("The OF and CF flags are cleared; the SF, ZF, and PF flags are set according to the result. The state of the AF flag is undefined.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Instruction")]),t._v(" "),e("th",[t._v("Latency")]),t._v(" "),e("th",[t._v("Throughput")]),t._v(" "),e("th",[t._v("Execution Unit")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("CPUID")]),t._v(" "),e("td",[t._v("0F3n/0F2n")]),t._v(" "),e("td",[t._v("0F3n/0F2n")]),t._v(" "),e("td",[t._v("0F2n")])]),t._v(" "),e("tr",[e("td",[t._v("XOR")]),t._v(" "),e("td",[t._v("1/0.5")]),t._v(" "),e("td",[t._v("0.5/0.5")]),t._v(" "),e("td",[t._v("ALU")])])])])])}),[],!1,null,null,null);r.default=_.exports}}]);