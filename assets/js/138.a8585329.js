(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{492:function(t,v,_){"use strict";_.r(v);var e=_(42),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"fyl2x"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fyl2x"}},[t._v("#")]),t._v(" FYL2X")]),t._v(" "),_("h2",{attrs:{id:"compute-y-log-2-x"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#compute-y-log-2-x"}},[t._v("#")]),t._v(" Compute y * log_2(x)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Opcode")]),t._v(" "),_("th",[t._v("Mnemonic")]),t._v(" "),_("th",[t._v("Description")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("D9 F1")]),t._v(" "),_("td",[t._v("FYL2X")]),t._v(" "),_("td",[t._v("Replace ST(1) with (ST(1) * log_2(ST(0))) and pop the register stack.")])])])]),t._v(" "),_("h2",{attrs:{id:"description"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),_("p",[t._v("Computes (ST(1) * log_2 (ST(0))), stores the result in resister ST(1), and pops the FPU register stack. The source operand in ST(0) must be a non-zero positive number.")]),t._v(" "),_("p",[t._v("The following table shows the results obtained when taking the log of various classes of numbers, assuming that neither overflow nor underflow occurs.")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("a",{attrs:{href:""}})]),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th"),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("-")]),t._v(" "),_("td",[t._v("ST(0): -inf")]),t._v(" "),_("td",[t._v("ST(0): -F")]),t._v(" "),_("td",[t._v("ST(0): +-0")]),t._v(" "),_("td",[t._v("ST(0): +0 <")]),t._v(" "),_("td",[t._v("+F < +1")]),t._v(" "),_("td",[t._v("+1")]),t._v(" "),_("td",[t._v("ST(0): +F > +1")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("NaN")])]),t._v(" "),_("tr",[_("td",[t._v("ST(1): -inf")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("-inf")]),t._v(" "),_("td",[t._v("-inf")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): -F")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("**")]),t._v(" "),_("td",[t._v("+F")]),t._v(" "),_("td",[t._v("-0")]),t._v(" "),_("td",[t._v("-F")]),t._v(" "),_("td",[t._v("-inf")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): -0")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("+0")]),t._v(" "),_("td",[t._v("-0")]),t._v(" "),_("td",[t._v("-0")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): +0")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("-0")]),t._v(" "),_("td",[t._v("+0")]),t._v(" "),_("td",[t._v("+0")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): +F")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("**")]),t._v(" "),_("td",[t._v("-F")]),t._v(" "),_("td",[t._v("+0")]),t._v(" "),_("td",[t._v("+F")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): +inf")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("-inf")]),t._v(" "),_("td",[t._v("-inf")]),t._v(" "),_("td",[t._v("*")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("+inf")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ST(1): NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("NaN")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("F Means finite floating-point value.")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("* Indicates floating-point invalid-operation (#IA) exception.")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("** Indicates floating-point zero-divide (#Z) exception.")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("If the divide-by-zero exception is masked and register ST(0) contains +-0, the instruction returns infinite with a sign that is the opposite of the sign of the source operand in register ST(1).")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("The FYL2X instruction is designed with a built-in multiplication to optimize the calculation of logarithms with an arbitrary positive base (b):")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("[code]")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("log_b(x) = log_2(x) / log_2(b)")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("[/code]")]),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td"),t._v(" "),_("td")])])]),t._v(" "),_("h2",{attrs:{id:"operation"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#operation"}},[t._v("#")]),t._v(" Operation")]),t._v(" "),_("div",{staticClass:"language-c line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-c"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_2")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("PopRegisterStack")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br")])]),_("h2",{attrs:{id:"fpu-flags-affected"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fpu-flags-affected"}},[t._v("#")]),t._v(" FPU flags affected")]),t._v(" "),_("p",[t._v("C1 Set to 0 if stack underflow occurred.\nSet if result was rounded up; cleared otherwise.\nC0, C2, C3 Undefined.")]),t._v(" "),_("h2",{attrs:{id:"floating-point-exceptions"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#floating-point-exceptions"}},[t._v("#")]),t._v(" Floating-Point Exceptions")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("a",{attrs:{href:""}})]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("#IS")]),t._v(" "),_("td",[t._v("Stack underflow occurred.")])]),t._v(" "),_("tr",[_("td",[t._v("#IS")]),t._v(" "),_("td",[t._v("Stack underflow occurred.")])]),t._v(" "),_("tr",[_("td",[t._v("#IA")]),t._v(" "),_("td",[t._v("Either operand is an SNaN or unsupported format. Source operand in register ST(0) is a negative finite value (not -0).")])]),t._v(" "),_("tr",[_("td",[t._v("#Z")]),t._v(" "),_("td",[t._v("Source operand in register ST(0) is +-0.")])]),t._v(" "),_("tr",[_("td",[t._v("#D")]),t._v(" "),_("td",[t._v("Source operand is a denormal value.")])]),t._v(" "),_("tr",[_("td",[t._v("#U")]),t._v(" "),_("td",[t._v("Result is too small for destination format.")])]),t._v(" "),_("tr",[_("td",[t._v("#O")]),t._v(" "),_("td",[t._v("Result is too large for destination format.")])])])]),t._v(" "),_("h2",{attrs:{id:"protected-mode-exceptions"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#protected-mode-exceptions"}},[t._v("#")]),t._v(" Protected Mode Exceptions")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("a",{attrs:{href:""}})]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("#NM")]),t._v(" "),_("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),_("h2",{attrs:{id:"real-address-mode-exceptions"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#real-address-mode-exceptions"}},[t._v("#")]),t._v(" Real-Address Mode Exceptions")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("a",{attrs:{href:""}})]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("#NM")]),t._v(" "),_("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),_("h2",{attrs:{id:"virtual-8086-mode-exceptions"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#virtual-8086-mode-exceptions"}},[t._v("#")]),t._v(" Virtual-8086 Mode Exceptions")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("a",{attrs:{href:""}})]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("#NM")]),t._v(" "),_("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Instruction")]),t._v(" "),_("th",[t._v("Latency")]),t._v(" "),_("th",[t._v("Throughput")]),t._v(" "),_("th",[t._v("Execution Unit")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("CPUID")]),t._v(" "),_("td",[t._v("0F3n/0F2n")]),t._v(" "),_("td",[t._v("0F3n/0F2n")]),t._v(" "),_("td",[t._v("0F2n")])]),t._v(" "),_("tr",[_("td",[t._v("FYL2X")]),t._v(" "),_("td",[t._v("100-250/140-190")]),t._v(" "),_("td",[t._v("85")]),t._v(" "),_("td",[t._v("-")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);