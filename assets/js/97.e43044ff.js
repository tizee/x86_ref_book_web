(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{450:function(t,e,a){"use strict";a.r(e);var n=a(42),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"fcos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fcos"}},[t._v("#")]),t._v(" FCOS")]),t._v(" "),a("h2",{attrs:{id:"cosine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cosine"}},[t._v("#")]),t._v(" Cosine")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Opcode")]),t._v(" "),a("th",[t._v("Mnemonic")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("D9 FF")]),t._v(" "),a("td",[t._v("FCOS")]),t._v(" "),a("td",[t._v("Replace ST(0) with its cosine.")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("ST(0) Source")]),t._v(" "),a("th",[t._v("ST(0) Destination")])])]),t._v(" "),a("tbody",[a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("Computes the cosine of the source operand in register ST(0) and stores the result in ST(0). The source operand must be given in radians and must be within the range -2^63 to +2^63. The following table shows the results obtained when taking the cosine of various classes of numbers.")]),t._v(" "),a("p",[t._v("FCOS Results\nST(0) SourceST(0) Destination\n-inf*\n-F-1 to +1\n-0+1\n+0+1\n+F-1 to +1\n+inf*\nNaNNaN")]),t._v(" "),a("p",[t._v("NOTES: F Means finite floating-point value.")]),t._v(" "),a("ul",[a("li",[t._v("Indicates floating-point invalid-arithmetic-operand (#IA) exception.")])]),t._v(" "),a("p",[t._v('If the source operand is outside the acceptable range, the C2 flag in the FPU status word is set, and the value in register ST(0) remains unchanged. The instruction does not raise an exception when the source operand is out of range. It is up to the program to check the C2 flag for out-ofrange conditions. Source values outside the range -2^63 to +2^63 can be reduced to the range of the instruction by subtracting an appropriate integer multiple of 2 * pi or by using the FPREM instruction with a divisor of 2 * pi. See the section titled "Pi" in Chapter 8 of the IA-32 Intel Architecture Software Developer\'s Manual, Volume 1, for a discussion of the proper value to use for pi in performing such reductions.\n|-inf|'),a("em",[t._v("|-F|-1 to +1|-0|+1|+0|+1|+F|-1 to +1|+inf|")]),t._v("|NaN|NaN|NOTES: F Means finite floating-point value.|* Indicates floating-point invalid-arithmetic-operand (#IA) exception.|\n|\n|-inf|"),a("em",[t._v("|\n|-F|-1 to +1|\n|-0|+1|\n|+0|+1|\n|+F|-1 to +1|\n|+inf|")]),t._v("|\n|NaN|NaN|\n|NOTES: F Means finite floating-point value.|\n|* Indicates floating-point invalid-arithmetic-operand (#IA) exception.|")]),t._v(" "),a("h2",{attrs:{id:"operation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operation"}},[t._v("#")]),t._v(" Operation")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetAbsoluteValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tC2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Cosine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" C2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//source operand is out-of-range")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"fpu-flags-affected"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fpu-flags-affected"}},[t._v("#")]),t._v(" FPU flags affected")]),t._v(" "),a("p",[t._v("C1 Set to 0 if stack underflow occurred.\nSet if result was rounded up; cleared otherwise.\nUndefined if C2 is 1.\nC2 Set to 1 if outside range (-2^63 < source operand < +2^63); otherwise, set to 0.\nC0, C3 Undefined.")]),t._v(" "),a("h2",{attrs:{id:"floating-point-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floating-point-exceptions"}},[t._v("#")]),t._v(" Floating-Point Exceptions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("a",{attrs:{href:""}})]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("#IS")]),t._v(" "),a("td",[t._v("Stack underflow occurred.")])]),t._v(" "),a("tr",[a("td",[t._v("#IS")]),t._v(" "),a("td",[t._v("Stack underflow occurred.")])]),t._v(" "),a("tr",[a("td",[t._v("#IA")]),t._v(" "),a("td",[t._v("Source operand is an SNaN value, infinite, or unsupported format.")])]),t._v(" "),a("tr",[a("td",[t._v("#D")]),t._v(" "),a("td",[t._v("Source is a denormal value.")])])])]),t._v(" "),a("h2",{attrs:{id:"protected-mode-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#protected-mode-exceptions"}},[t._v("#")]),t._v(" Protected Mode Exceptions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("a",{attrs:{href:""}})]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("#NM")]),t._v(" "),a("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),a("h2",{attrs:{id:"real-address-mode-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#real-address-mode-exceptions"}},[t._v("#")]),t._v(" Real-Address Mode Exceptions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("a",{attrs:{href:""}})]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("#NM")]),t._v(" "),a("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),a("h2",{attrs:{id:"virtual-8086-mode-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-8086-mode-exceptions"}},[t._v("#")]),t._v(" Virtual-8086 Mode Exceptions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("a",{attrs:{href:""}})]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("#NM")]),t._v(" "),a("td",[t._v("EM or TS in CR0 is set.")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Instruction")]),t._v(" "),a("th",[t._v("Latency")]),t._v(" "),a("th",[t._v("Throughput")]),t._v(" "),a("th",[t._v("Execution Unit")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CPUID")]),t._v(" "),a("td",[t._v("0F3n/0F2n")]),t._v(" "),a("td",[t._v("0F3n/0F2n")]),t._v(" "),a("td",[t._v("0F2n")])]),t._v(" "),a("tr",[a("td",[t._v("FCOS")]),t._v(" "),a("td",[t._v("180-280/190-240")]),t._v(" "),a("td",[t._v("130")]),t._v(" "),a("td",[t._v("-")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);